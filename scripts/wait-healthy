cat > scripts/ci/wait-healthy << 'EOF'
#!/bin/bash

# Check if container name is provided
if [ -z "$1" ]; then
    echo "Usage: $0 docker-container"
    exit 1
fi

CONTAINER="$1"
TIMEOUT=120  # Maximum wait time in seconds
INTERVAL=5   # Check interval in seconds
TIME=0

while [ $TIME -lt $TIMEOUT ]; do
    # Check container health status
    HEALTH=$(docker inspect --format='{{.State.Health.Status}}' "$CONTAINER" 2>/dev/null)
    
    case $HEALTH in
        healthy)
            echo "$CONTAINER is healthy"
            exit 0
            ;;
        unhealthy)
            echo "$CONTAINER is unhealthy"
            exit 1
            ;;
        starting)
            echo "$CONTAINER health check is still running..."
            ;;
        *)
            echo "Waiting for $CONTAINER..."
            ;;
    esac
    
    sleep $INTERVAL
    TIME=$((TIME + INTERVAL))
done

echo "Timeout waiting for $CONTAINER to become healthy"
exit 1
EOF


# #!/bin/bash

# DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# . "$DIR/.common.sh"

# if [ "$1" == "" ]; then
# 	echo "Waits for a docker container to be healthy."
# 	echo "Usage: $0 docker-container"
# 	exit 1
# fi

# SERVICE=$1
# LOOPCOUNT=0
# HEALTHY=
# LIMIT=${2:-90}

# echo -e "${BLUE}❯ ${CYAN}Waiting for healthy: ${YELLOW}${SERVICE}${RESET}"

# until [ "${HEALTHY}" = "healthy" ]; do
# 	echo -n "."
# 	sleep 1
# 	HEALTHY="$(docker inspect -f '{{.State.Health.Status}}' $SERVICE)"
# 	((LOOPCOUNT++))

# 	if [ "$LOOPCOUNT" == "$LIMIT" ]; then
# 		echo -e "${BLUE}❯ ${RED}Timed out waiting for healthy${RESET}"
# 		docker logs --tail 50 "$SERVICE"
# 		exit 1
# 	fi
# done

# echo ""
# echo -e "${BLUE}❯ ${GREEN}Healthy!${RESET}"
